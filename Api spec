import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Iterator;
import java.util.Map;
import java.util.Properties;

public class APISpecExtractor {

    public static void main(String[] args) {
        extractAPIProperties("api-spec.json", "api-config.properties");
    }

    public static void extractAPIProperties(String inputFile, String outputFile) {
        ObjectMapper objectMapper = new ObjectMapper();
        Properties properties = new Properties();

        try {
            JsonNode rootNode = objectMapper.readTree(new File(inputFile));

            // Assuming OpenAPI format: paths contain the endpoints
            JsonNode pathsNode = rootNode.path("paths");
            Iterator<Map.Entry<String, JsonNode>> fields = pathsNode.fields();

            while (fields.hasNext()) {
                Map.Entry<String, JsonNode> field = fields.next();
                String endpoint = field.getKey(); // API endpoint
                
                // Extract HTTP methods (GET, POST, etc.)
                JsonNode methodsNode = field.getValue();
                Iterator<String> methods = methodsNode.fieldNames();

                while (methods.hasNext()) {
                    String method = methods.next();
                    String key = method.toUpperCase() + "." + endpoint.replace("/", ".");

                    // Extract description if available
                    String description = methodsNode.path(method).path("description").asText("");

                    // Store in properties
                    properties.setProperty(key + ".url", endpoint);
                    properties.setProperty(key + ".method", method.toUpperCase());
                    properties.setProperty(key + ".description", description);
                }
            }

            // Save to properties file
            try (FileWriter writer = new FileWriter(outputFile)) {
                properties.store(writer, "Extracted API Configurations");
            }
            System.out.println("API Properties extracted successfully!");

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
